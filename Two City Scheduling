There are 2N people a company is planning to interview. The cost of flying the i-th person to city A is costs[i][0],
and the cost of flying the i-th person to city B is costs[i][1].
Return the minimum cost to fly every person to a city such that exactly N people arrive in each city.

#Solution 1 -
class Solution {
    public int twoCitySchedCost(int[][] costs) {
        int result = 0;
       Arrays.sort(costs, new Comparator<int[]>(){
       @Override
            public int compare(int[] e1, int[] e2) {
            if(e1[1] - e1[0] == e2[1] - e2[0])
                return -1;
            if(e1[1] - e1[0] > e2[1] - e2[0])
                return -1;
            else
                return 1;
            }        
        });
        for(int i = 0 ; i < costs.length/2; i++){
            result += costs[i][0];
        }
        
        for(int i = costs.length/2 ; i < costs.length; i++){
            result += costs[i][1];
        }
        return result;
}
}
